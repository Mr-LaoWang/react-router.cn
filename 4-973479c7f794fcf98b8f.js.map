{"version":3,"sources":["webpack:///4-973479c7f794fcf98b8f.js","webpack:///../node_modules/react-transition-group/Transition.js","webpack:///../node_modules/react-transition-group/utils/PropTypes.js","webpack:///./modules/examples/Animation.js","webpack:///../node_modules/react-transition-group/index.js","webpack:///../node_modules/react-transition-group/CSSTransition.js","webpack:///../node_modules/dom-helpers/class/addClass.js","webpack:///../node_modules/dom-helpers/class/hasClass.js","webpack:///../node_modules/dom-helpers/class/removeClass.js","webpack:///../node_modules/react-transition-group/TransitionGroup.js","webpack:///../node_modules/react-transition-group/utils/ChildMapping.js"],"names":["webpackJsonp","496","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_objectWithoutProperties","keys","target","i","indexOf","Object","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","noop","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","undefined","_propTypes","PropTypes","newObj","key","_react","_react2","_reactDom","_reactDom2","Transition","_React$Component","props","context","this","_this","parentGroup","transitionGroup","appear","isMounting","enter","initialStatus","nextStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getChildContext","componentDidMount","updateStatus","componentWillReceiveProps","nextProps","_ref","pendingState","setState","componentDidUpdate","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","exit","mounting","arguments","length","node","findDOMNode","performEnter","performExit","_this2","appearing","timeouts","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExited","onExit","onExiting","cancel","nextState","callback","_this4","setNextCallback","_this5","active","event","handler","addEndListener","setTimeout","render","_props","children","childProps","child","Children","only","cloneElement","Component","contextTypes","object","childContextTypes","propTypes","defaultProps","497","transitionTimeout","transitionType","timeoutPropName","enabledPropName","Error","classNamesShape","timeoutsShape","_propTypes2","oneOfType","number","shape","isRequired","string","enterActive","exitActive","553","_extends","assign","source","_reactTransitionGroup","_reactRouterDom","AnimationExample","createElement","BrowserRouter","Route","location","style","styles","fill","exact","path","Redirect","to","nav","NavLink","content","TransitionGroup","CSSTransition","classNames","Switch","component","HSL","RGB","navItem","Link","color","_ref2","params","match","hsl","background","h","s","l","_ref3","rgb","r","g","b","position","left","right","top","bottom","textAlign","padding","margin","height","width","display","flex","listStyleType","paddingTop","fontSize","554","_CSSTransition","_CSSTransition2","_TransitionGroup","_TransitionGroup2","_Transition","_Transition2","555","_addClass","_addClass2","_removeClass","_removeClass2","_PropTypes","addClass","classes","split","forEach","c","removeClass","func","_temp","_ret","_len","args","Array","_key","apply","concat","_this$getClassNames","getClassNames","className","removeClasses","_this$getClassNames2","activeClassName","reflowAndAddClass","_this$getClassNames3","_this$getClassNames4","type","_getClassNames","scrollTop","556","element","classList","add","_hasClass2","setAttribute","baseVal","defineProperty","_hasClass","557","hasClass","contains","558","replaceClassName","origClass","classToRemove","replace","RegExp","remove","559","_ChildMapping","values","map","k","any","bool","childFactory","handleExited","originalHandler","currentChildMapping","getChildMapping","getProp","appeared","prop","prevChildMapping","nextChildMapping","mergeChildMappings","isValidElement","hasPrev","hasNext","prevChild","isLeaving","560","mapFn","mapper","result","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey"],"mappings":"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","file":"4-973479c7f794fcf98b8f.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 496:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;\n\nvar _propTypes = __webpack_require__(4);\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(128);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _PropTypes = __webpack_require__(497);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UNMOUNTED = exports.UNMOUNTED = 'unmounted';\nvar EXITED = exports.EXITED = 'exited';\nvar ENTERING = exports.ENTERING = 'entering';\nvar ENTERED = exports.ENTERED = 'entered';\nvar EXITING = exports.EXITING = 'exiting';\n\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the components.\n * It's up to you to give meaning and effect to those states. For example we can\n * add styles to a component when it enters or exits:\n *\n * ```jsx\n * import Transition from 'react-transition-group/Transition';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {(state) => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm A fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * As noted the `Transition` component doesn't _do_ anything by itself to its child component.\n * What it does do is track transition states over time so you can update the\n * component (such as by adding styles or classes) when it changes states.\n *\n * There are 4 main states a Transition can be in:\n *  - `ENTERING`\n *  - `ENTERED`\n *  - `EXITING`\n *  - `EXITED`\n *\n * Transition state is toggled via the `in` prop. When `true` the component begins the\n * \"Enter\" stage. During this stage, the component will shift from its current transition state,\n * to `'entering'` for the duration of the transition and then to the `'entered'` stage once\n * it's complete. Let's take the following example:\n *\n * ```jsx\n * state= { in: false };\n *\n * toggleEnterState = () => {\n *   this.setState({ in: true });\n * }\n *\n * render() {\n *   return (\n *     <div>\n *       <Transition in={this.state.in} timeout={500} />\n *       <button onClick={this.toggleEnterState}>Click to Enter</button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state and\n * stay there for 500ms (the value of `timeout`) when finally switches to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.\n */\n\nvar Transition = function (_React$Component) {\n  _inherits(Transition, _React$Component);\n\n  function Transition(props, context) {\n    _classCallCheck(this, Transition);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    var parentGroup = context.transitionGroup;\n    // In the context of a TransitionGroup all enters are really appears\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n\n    var initialStatus = void 0;\n    _this.nextStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.nextStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = { status: initialStatus };\n\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.prototype.getChildContext = function getChildContext() {\n    return { transitionGroup: null }; // allows for nested Transitions\n  };\n\n  Transition.prototype.componentDidMount = function componentDidMount() {\n    this.updateStatus(true);\n  };\n\n  Transition.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _ref = this.pendingState || this.state,\n        status = _ref.status;\n\n    if (nextProps.in) {\n      if (status === UNMOUNTED) {\n        this.setState({ status: EXITED });\n      }\n      if (status !== ENTERING && status !== ENTERED) {\n        this.nextStatus = ENTERING;\n      }\n    } else {\n      if (status === ENTERING || status === ENTERED) {\n        this.nextStatus = EXITING;\n      }\n    }\n  };\n\n  Transition.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.updateStatus();\n  };\n\n  Transition.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  Transition.prototype.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n\n    var exit = void 0,\n        enter = void 0,\n        appear = void 0;\n\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter;\n      appear = timeout.appear;\n    }\n    return { exit: exit, enter: enter, appear: appear };\n  };\n\n  Transition.prototype.updateStatus = function updateStatus() {\n    var mounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var nextStatus = this.nextStatus;\n\n    if (nextStatus !== null) {\n      this.nextStatus = null;\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n      var node = _reactDom2.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({ status: UNMOUNTED });\n    }\n  };\n\n  Transition.prototype.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n\n    var timeouts = this.getTimeouts();\n\n    // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n    if (!mounting && !enter) {\n      this.safeSetState({ status: ENTERED }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n\n    this.safeSetState({ status: ENTERING }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      // FIXME: appear timeout?\n      _this2.onTransitionEnd(node, timeouts.enter, function () {\n        _this2.safeSetState({ status: ENTERED }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  Transition.prototype.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n\n    var timeouts = this.getTimeouts();\n\n    // no exit animation skip right to EXITED\n    if (!exit) {\n      this.safeSetState({ status: EXITED }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n    this.props.onExit(node);\n\n    this.safeSetState({ status: EXITING }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({ status: EXITED }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  Transition.prototype.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {\n    var _this4 = this;\n\n    // We need to track pending updates for instances where a cWRP fires quickly\n    // after cDM and before the state flushes, which would double trigger a\n    // transition\n    this.pendingState = nextState;\n\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, function () {\n      _this4.pendingState = null;\n      callback();\n    });\n  };\n\n  Transition.prototype.setNextCallback = function setNextCallback(callback) {\n    var _this5 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this5.nextCallback = null;\n\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  Transition.prototype.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n\n    if (node) {\n      if (this.props.addEndListener) {\n        this.props.addEndListener(node, this.nextCallback);\n      }\n      if (timeout != null) {\n        setTimeout(this.nextCallback, timeout);\n      }\n    } else {\n      setTimeout(this.nextCallback, 0);\n    }\n  };\n\n  Transition.prototype.render = function render() {\n    var status = this.state.status;\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _props = this.props,\n        children = _props.children,\n        childProps = _objectWithoutProperties(_props, ['children']);\n    // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react2.default.Children.only(children);\n    return _react2.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react2.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\n\n\nTransition.propTypes =  false ? {\n  /**\n   * A `function` child can be used instead of a React element.\n   * This function is called with the current transition status\n   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can used\n   * to apply context specific props to a component.\n   *\n   * ```jsx\n   * <Transition timeout={150}>\n   *   {(status) => (\n   *     <MyComponent className={`fade fade-${status}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEventListener` is provided\n   *\n   * You may specify a single timeout for all transitions like: `timeout={500}`,\n   * or individually like:\n   *\n   * ```jsx\n   * timeout={{\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * @type {number | { enter?: number, exit?: number }}\n   */\n  timeout: function timeout(props) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n    return pt.apply(undefined, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {};\n\n// Name the function so it is clearer in the documentation\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\n\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nexports.default = Transition;\n\n/***/ }),\n\n/***/ 497:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.classNamesShape = exports.timeoutsShape = undefined;\nexports.transitionTimeout = transitionTimeout;\n\nvar _propTypes = __webpack_require__(4);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction transitionTimeout(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');\n\n        // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n\n    return null;\n  };\n}\n\nvar timeoutsShape = exports.timeoutsShape = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({\n  enter: _propTypes2.default.number,\n  exit: _propTypes2.default.number\n}).isRequired]);\n\nvar classNamesShape = exports.classNamesShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  exit: _propTypes2.default.string,\n  active: _propTypes2.default.string\n}), _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  enterActive: _propTypes2.default.string,\n  exit: _propTypes2.default.string,\n  exitActive: _propTypes2.default.string\n})]);\n\n/***/ }),\n\n/***/ 553:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactTransitionGroup = __webpack_require__(554);\n\nvar _reactRouterDom = __webpack_require__(16);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* you'll need this CSS somewhere\n.fade-enter {\n  opacity: 0;\n  z-index: 1;\n}\n\n.fade-enter.fade-enter-active {\n  opacity: 1;\n  transition: opacity 250ms ease-in;\n}\n*/\n\nvar AnimationExample = function AnimationExample() {\n  return _react2.default.createElement(\n    _reactRouterDom.BrowserRouter,\n    null,\n    _react2.default.createElement(_reactRouterDom.Route, {\n      render: function render(_ref) {\n        var location = _ref.location;\n        return _react2.default.createElement(\n          \"div\",\n          { style: styles.fill },\n          _react2.default.createElement(_reactRouterDom.Route, {\n            exact: true,\n            path: \"/\",\n            render: function render() {\n              return _react2.default.createElement(_reactRouterDom.Redirect, { to: \"/hsl/10/90/50\" });\n            }\n          }),\n          _react2.default.createElement(\n            \"ul\",\n            { style: styles.nav },\n            _react2.default.createElement(\n              NavLink,\n              { to: \"/hsl/10/90/50\" },\n              \"Red\"\n            ),\n            _react2.default.createElement(\n              NavLink,\n              { to: \"/hsl/120/100/40\" },\n              \"Green\"\n            ),\n            _react2.default.createElement(\n              NavLink,\n              { to: \"/rgb/33/150/243\" },\n              \"Blue\"\n            ),\n            _react2.default.createElement(\n              NavLink,\n              { to: \"/rgb/240/98/146\" },\n              \"Pink\"\n            )\n          ),\n          _react2.default.createElement(\n            \"div\",\n            { style: styles.content },\n            _react2.default.createElement(\n              _reactTransitionGroup.TransitionGroup,\n              null,\n              _react2.default.createElement(\n                _reactTransitionGroup.CSSTransition,\n                { key: location.key, classNames: \"fade\", timeout: 300 },\n                _react2.default.createElement(\n                  _reactRouterDom.Switch,\n                  { location: location },\n                  _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: \"/hsl/:h/:s/:l\", component: HSL }),\n                  _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: \"/rgb/:r/:g/:b\", component: RGB }),\n                  _react2.default.createElement(_reactRouterDom.Route, { render: function render() {\n                      return _react2.default.createElement(\n                        \"div\",\n                        null,\n                        \"Not Found\"\n                      );\n                    } })\n                )\n              )\n            )\n          )\n        );\n      }\n    })\n  );\n};\n\nvar NavLink = function NavLink(props) {\n  return _react2.default.createElement(\n    \"li\",\n    { style: styles.navItem },\n    _react2.default.createElement(_reactRouterDom.Link, _extends({}, props, { style: { color: \"inherit\" } }))\n  );\n};\n\nvar HSL = function HSL(_ref2) {\n  var params = _ref2.match.params;\n  return _react2.default.createElement(\n    \"div\",\n    {\n      style: _extends({}, styles.fill, styles.hsl, {\n        background: \"hsl(\" + params.h + \", \" + params.s + \"%, \" + params.l + \"%)\"\n      })\n    },\n    \"hsl(\",\n    params.h,\n    \", \",\n    params.s,\n    \"%, \",\n    params.l,\n    \"%)\"\n  );\n};\n\nvar RGB = function RGB(_ref3) {\n  var params = _ref3.match.params;\n  return _react2.default.createElement(\n    \"div\",\n    {\n      style: _extends({}, styles.fill, styles.rgb, {\n        background: \"rgb(\" + params.r + \", \" + params.g + \", \" + params.b + \")\"\n      })\n    },\n    \"rgb(\",\n    params.r,\n    \", \",\n    params.g,\n    \", \",\n    params.b,\n    \")\"\n  );\n};\n\nvar styles = {};\n\nstyles.fill = {\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\n\nstyles.content = _extends({}, styles.fill, {\n  top: \"40px\",\n  textAlign: \"center\"\n});\n\nstyles.nav = {\n  padding: 0,\n  margin: 0,\n  position: \"absolute\",\n  top: 0,\n  height: \"40px\",\n  width: \"100%\",\n  display: \"flex\"\n};\n\nstyles.navItem = {\n  textAlign: \"center\",\n  flex: 1,\n  listStyleType: \"none\",\n  padding: \"10px\"\n};\n\nstyles.hsl = _extends({}, styles.fill, {\n  color: \"white\",\n  paddingTop: \"20px\",\n  fontSize: \"30px\"\n});\n\nstyles.rgb = _extends({}, styles.fill, {\n  color: \"white\",\n  paddingTop: \"20px\",\n  fontSize: \"30px\"\n});\n\nexports.default = AnimationExample;\n\n/***/ }),\n\n/***/ 554:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _CSSTransition = __webpack_require__(555);\n\nvar _CSSTransition2 = _interopRequireDefault(_CSSTransition);\n\nvar _TransitionGroup = __webpack_require__(559);\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nvar _Transition = __webpack_require__(496);\n\nvar _Transition2 = _interopRequireDefault(_Transition);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  Transition: _Transition2.default,\n  TransitionGroup: _TransitionGroup2.default,\n  CSSTransition: _CSSTransition2.default\n};\n\n/***/ }),\n\n/***/ 555:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = __webpack_require__(4);\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _addClass = __webpack_require__(556);\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = __webpack_require__(558);\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Transition = __webpack_require__(496);\n\nvar _Transition2 = _interopRequireDefault(_Transition);\n\nvar _PropTypes = __webpack_require__(497);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar addClass = function addClass(node, classes) {\n  return classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass2.default)(node, c);\n  });\n};\nvar removeClass = function removeClass(node, classes) {\n  return classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass2.default)(node, c);\n  });\n};\n\nvar propTypes = _extends({}, _Transition2.default.propTypes, {\n\n  /**\n   * The animation classNames applied to the component as it enters or exits.\n   * A single name can be provided and it will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`,\n   * `fade-exit`, `fade-exit-active`, `fade-appear`, and `fade-appear-active`.\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   * }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** from the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** from the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n});\n\n/**\n * A `Transition` component using CSS transitions and animations.\n * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` stages of the transition. The first class is applied and then a\n * second \"active\" class in order to activate the css animation.\n *\n * When the `in` prop is toggled to `true` the Component will get\n * the `example-enter` CSS class and the `example-enter-active` CSS class\n * added in the next tick. This is a convention based on the `classNames` prop.\n *\n * ```js\n * import CSSTransition from 'react-transition-group/CSSTransition';\n *\n * const Fade = ({ children, ...props }) => (\n *  <CSSTransition\n *    {...props}\n *    timeout={500}\n *    classNames=\"fade\"\n *  >\n *   {children}\n *  </CSSTransition>\n * );\n *\n * class FadeInAndOut extends React.Component {\n *   constructor(...args) {\n *     super(...args);\n *     this.state= { show: false }\n *\n *     setInterval(() => {\n *       this.setState({ show: !this.state.show })\n *     }, 5000)\n *   }\n *   render() {\n *     return (\n *       <Fade in={this.state.show}>\n *         <div>Hello world</div>\n *       </Fade>\n *     )\n *   }\n * }\n * ```\n *\n * And the coorresponding CSS for the `<Fade>` component:\n *\n * ```css\n * .fade-enter {\n *   opacity: 0.01;\n * }\n *\n * .fade-enter.fade-enter-active {\n *   opacity: 1;\n *   transition: opacity 500ms ease-in;\n * }\n *\n * .fade-exit {\n *   opacity: 1;\n * }\n *\n * .fade-exit.fade-exit-active {\n *   opacity: 0.01;\n *   transition: opacity 300ms ease-in;\n * }\n * ```\n */\n\nvar CSSTransition = function (_React$Component) {\n  _inherits(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransition);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node);\n      }\n    }, _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node);\n      }\n    }, _this.onEntered = function (node, appearing) {\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node);\n      }\n    }, _this.onExit = function (node) {\n      var _this$getClassNames3 = _this.getClassNames('exit'),\n          className = _this$getClassNames3.className;\n\n      _this.removeClasses(node, 'appear');\n      _this.removeClasses(node, 'enter');\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    }, _this.onExiting = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames4.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    }, _this.onExited = function (node) {\n      _this.removeClasses(node, 'exit');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    }, _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n\n\n      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;\n\n      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';\n\n      return { className: className, activeClassName: activeClassName };\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  CSSTransition.prototype.removeClasses = function removeClasses(node, type) {\n    var _getClassNames = this.getClassNames(type),\n        className = _getClassNames.className,\n        activeClassName = _getClassNames.activeClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n  };\n\n  CSSTransition.prototype.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    /* eslint-disable no-unused-expressions */\n    node.scrollTop;\n    /* eslint-enable no-unused-expressions */\n    addClass(node, className);\n  };\n\n  CSSTransition.prototype.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n\n    return _react2.default.createElement(_Transition2.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react2.default.Component);\n\nCSSTransition.propTypes =  false ? propTypes : {};\n\nexports.default = CSSTransition;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 556:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\nvar _hasClass = __webpack_require__(557);\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 557:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 558:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};\n\n/***/ }),\n\n/***/ 559:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = __webpack_require__(4);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ChildMapping = __webpack_require__(560);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar propTypes = {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   */\n  component: _propTypes2.default.any,\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * A convenience prop that enables or disabled appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: _propTypes2.default.bool,\n  /**\n   * A convenience prop that enables or disabled enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: _propTypes2.default.bool,\n  /**\n    * A convenience prop that enables or disabled exit animations\n    * for all children. Note that specifying this will override any defaults set\n    * on individual children Transitions.\n    */\n  exit: _propTypes2.default.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: _propTypes2.default.func\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n\n/**\n * The `<TransitionGroup>` component manages a set of `<Transition>` components\n * in a list. Like with the `<Transition>` component, `<TransitionGroup>`, is a\n * state machine for managing the mounting and unmounting of components over\n * time.\n *\n * Consider the example below using the `Fade` CSS transition from before.\n * As items are removed or added to the TodoList the `in` prop is toggled\n * automatically by the `<TransitionGroup>`. You can use _any_ `<Transition>`\n * component in a `<TransitionGroup>`, not just css.\n *\n * ```jsx\n * import TransitionGroup from 'react-transition-group/TransitionGroup';\n *\n * class TodoList extends React.Component {\n *   constructor(props) {\n *     super(props)\n *     this.state = {items: ['hello', 'world', 'click', 'me']}\n *   }\n *   handleAdd() {\n *     const newItems = this.state.items.concat([\n *       prompt('Enter some text')\n *     ]);\n *     this.setState({ items: newItems });\n *   }\n *   handleRemove(i) {\n *     let newItems = this.state.items.slice();\n *     newItems.splice(i, 1);\n *     this.setState({items: newItems});\n *   }\n *   render() {\n *     return (\n *       <div>\n *         <button onClick={() => this.handleAdd()}>Add Item</button>\n *         <TransitionGroup>\n *           {this.state.items.map((item, i) => (\n *             <FadeTransition key={item}>\n *               <div>\n *                 {item}{' '}\n *                 <button onClick={() => this.handleRemove(i)}>\n *                   remove\n *                 </button>\n *               </div>\n *             </FadeTransition>\n *           ))}\n *         </TransitionGroup>\n *       </div>\n *     );\n *   }\n * }\n * ```\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual `<Transition>`\n * components. This means you can mix and match animations across different\n * list items.\n */\n\nvar TransitionGroup = function (_React$Component) {\n  _inherits(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    _classCallCheck(this, TransitionGroup);\n\n    // Initial children should all be entering, dependent on appear\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.handleExited = function (key, node, originalHandler) {\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (key in currentChildMapping) return;\n\n      if (originalHandler) originalHandler(node);\n\n      _this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[key];\n        return { children: children };\n      });\n    };\n\n    _this.state = {\n      children: (0, _ChildMapping.getChildMapping)(props.children, function (child) {\n        var onExited = function onExited(node) {\n          _this.handleExited(child.key, node, child.props.onExited);\n        };\n\n        return (0, _react.cloneElement)(child, {\n          onExited: onExited,\n          in: true,\n          appear: _this.getProp(child, 'appear'),\n          enter: _this.getProp(child, 'enter'),\n          exit: _this.getProp(child, 'exit')\n        });\n      })\n    };\n    return _this;\n  }\n\n  TransitionGroup.prototype.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: { isMounting: !this.appeared }\n    };\n  };\n  // use child config unless explictly set by the Group\n\n\n  TransitionGroup.prototype.getProp = function getProp(child, prop) {\n    var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.props;\n\n    return props[prop] != null ? props[prop] : child.props[prop];\n  };\n\n  TransitionGroup.prototype.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    var prevChildMapping = this.state.children;\n    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);\n\n    var children = (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping);\n\n    Object.keys(children).forEach(function (key) {\n      var child = children[key];\n\n      if (!(0, _react.isValidElement)(child)) return;\n\n      var onExited = function onExited(node) {\n        _this2.handleExited(child.key, node, child.props.onExited);\n      };\n\n      var hasPrev = key in prevChildMapping;\n      var hasNext = key in nextChildMapping;\n\n      var prevChild = prevChildMapping[key];\n      var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in;\n\n      // item is new (entering)\n      if (hasNext && (!hasPrev || isLeaving)) {\n        // console.log('entering', key)\n        children[key] = (0, _react.cloneElement)(child, {\n          onExited: onExited,\n          in: true,\n          exit: _this2.getProp(child, 'exit', nextProps),\n          enter: _this2.getProp(child, 'enter', nextProps)\n        });\n      }\n      // item is old (exiting)\n      else if (!hasNext && hasPrev && !isLeaving) {\n          // console.log('leaving', key)\n          children[key] = (0, _react.cloneElement)(child, { in: false });\n        }\n        // item hasn't changed transition states\n        // copy over the last transition props;\n        else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {\n            // console.log('unchanged', key)\n            children[key] = (0, _react.cloneElement)(child, {\n              onExited: onExited,\n              in: prevChild.props.in,\n              exit: _this2.getProp(child, 'exit', nextProps),\n              enter: _this2.getProp(child, 'enter', nextProps)\n            });\n          }\n    });\n\n    this.setState({ children: children });\n  };\n\n  TransitionGroup.prototype.render = function render() {\n    var _props = this.props,\n        Component = _props.component,\n        childFactory = _props.childFactory,\n        props = _objectWithoutProperties(_props, ['component', 'childFactory']);\n\n    var children = this.state.children;\n\n\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    return _react2.default.createElement(\n      Component,\n      props,\n      values(children).map(childFactory)\n    );\n  };\n\n  return TransitionGroup;\n}(_react2.default.Component);\n\nTransitionGroup.childContextTypes = {\n  transitionGroup: _propTypes2.default.object.isRequired\n};\n\n\nTransitionGroup.propTypes =  false ? propTypes : {};\nTransitionGroup.defaultProps = defaultProps;\n\nexports.default = TransitionGroup;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 560:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\n\nvar _react = __webpack_require__(1);\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) _react.Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  }\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  var nextKeysPending = Object.create(null);\n\n  var pendingKeys = [];\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i = void 0;\n  var childMapping = {};\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey);\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 4-973479c7f794fcf98b8f.js","'use strict';\n\nexports.__esModule = true;\nexports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UNMOUNTED = exports.UNMOUNTED = 'unmounted';\nvar EXITED = exports.EXITED = 'exited';\nvar ENTERING = exports.ENTERING = 'entering';\nvar ENTERED = exports.ENTERED = 'entered';\nvar EXITING = exports.EXITING = 'exiting';\n\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the components.\n * It's up to you to give meaning and effect to those states. For example we can\n * add styles to a component when it enters or exits:\n *\n * ```jsx\n * import Transition from 'react-transition-group/Transition';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {(state) => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm A fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * As noted the `Transition` component doesn't _do_ anything by itself to its child component.\n * What it does do is track transition states over time so you can update the\n * component (such as by adding styles or classes) when it changes states.\n *\n * There are 4 main states a Transition can be in:\n *  - `ENTERING`\n *  - `ENTERED`\n *  - `EXITING`\n *  - `EXITED`\n *\n * Transition state is toggled via the `in` prop. When `true` the component begins the\n * \"Enter\" stage. During this stage, the component will shift from its current transition state,\n * to `'entering'` for the duration of the transition and then to the `'entered'` stage once\n * it's complete. Let's take the following example:\n *\n * ```jsx\n * state= { in: false };\n *\n * toggleEnterState = () => {\n *   this.setState({ in: true });\n * }\n *\n * render() {\n *   return (\n *     <div>\n *       <Transition in={this.state.in} timeout={500} />\n *       <button onClick={this.toggleEnterState}>Click to Enter</button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state and\n * stay there for 500ms (the value of `timeout`) when finally switches to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.\n */\n\nvar Transition = function (_React$Component) {\n  _inherits(Transition, _React$Component);\n\n  function Transition(props, context) {\n    _classCallCheck(this, Transition);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    var parentGroup = context.transitionGroup;\n    // In the context of a TransitionGroup all enters are really appears\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n\n    var initialStatus = void 0;\n    _this.nextStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.nextStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = { status: initialStatus };\n\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.prototype.getChildContext = function getChildContext() {\n    return { transitionGroup: null }; // allows for nested Transitions\n  };\n\n  Transition.prototype.componentDidMount = function componentDidMount() {\n    this.updateStatus(true);\n  };\n\n  Transition.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _ref = this.pendingState || this.state,\n        status = _ref.status;\n\n    if (nextProps.in) {\n      if (status === UNMOUNTED) {\n        this.setState({ status: EXITED });\n      }\n      if (status !== ENTERING && status !== ENTERED) {\n        this.nextStatus = ENTERING;\n      }\n    } else {\n      if (status === ENTERING || status === ENTERED) {\n        this.nextStatus = EXITING;\n      }\n    }\n  };\n\n  Transition.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.updateStatus();\n  };\n\n  Transition.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  Transition.prototype.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n\n    var exit = void 0,\n        enter = void 0,\n        appear = void 0;\n\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter;\n      appear = timeout.appear;\n    }\n    return { exit: exit, enter: enter, appear: appear };\n  };\n\n  Transition.prototype.updateStatus = function updateStatus() {\n    var mounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var nextStatus = this.nextStatus;\n\n    if (nextStatus !== null) {\n      this.nextStatus = null;\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n      var node = _reactDom2.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({ status: UNMOUNTED });\n    }\n  };\n\n  Transition.prototype.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n\n    var timeouts = this.getTimeouts();\n\n    // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n    if (!mounting && !enter) {\n      this.safeSetState({ status: ENTERED }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n\n    this.safeSetState({ status: ENTERING }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      // FIXME: appear timeout?\n      _this2.onTransitionEnd(node, timeouts.enter, function () {\n        _this2.safeSetState({ status: ENTERED }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  Transition.prototype.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n\n    var timeouts = this.getTimeouts();\n\n    // no exit animation skip right to EXITED\n    if (!exit) {\n      this.safeSetState({ status: EXITED }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n    this.props.onExit(node);\n\n    this.safeSetState({ status: EXITING }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({ status: EXITED }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  Transition.prototype.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {\n    var _this4 = this;\n\n    // We need to track pending updates for instances where a cWRP fires quickly\n    // after cDM and before the state flushes, which would double trigger a\n    // transition\n    this.pendingState = nextState;\n\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, function () {\n      _this4.pendingState = null;\n      callback();\n    });\n  };\n\n  Transition.prototype.setNextCallback = function setNextCallback(callback) {\n    var _this5 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this5.nextCallback = null;\n\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  Transition.prototype.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n\n    if (node) {\n      if (this.props.addEndListener) {\n        this.props.addEndListener(node, this.nextCallback);\n      }\n      if (timeout != null) {\n        setTimeout(this.nextCallback, timeout);\n      }\n    } else {\n      setTimeout(this.nextCallback, 0);\n    }\n  };\n\n  Transition.prototype.render = function render() {\n    var status = this.state.status;\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _props = this.props,\n        children = _props.children,\n        childProps = _objectWithoutProperties(_props, ['children']);\n    // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react2.default.Children.only(children);\n    return _react2.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react2.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\n\n\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element.\n   * This function is called with the current transition status\n   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can used\n   * to apply context specific props to a component.\n   *\n   * ```jsx\n   * <Transition timeout={150}>\n   *   {(status) => (\n   *     <MyComponent className={`fade fade-${status}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEventListener` is provided\n   *\n   * You may specify a single timeout for all transitions like: `timeout={500}`,\n   * or individually like:\n   *\n   * ```jsx\n   * timeout={{\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * @type {number | { enter?: number, exit?: number }}\n   */\n  timeout: function timeout(props) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n    return pt.apply(undefined, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {};\n\n// Name the function so it is clearer in the documentation\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\n\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nexports.default = Transition;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/react-transition-group/Transition.js\n// module id = 496\n// module chunks = 4","'use strict';\n\nexports.__esModule = true;\nexports.classNamesShape = exports.timeoutsShape = undefined;\nexports.transitionTimeout = transitionTimeout;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction transitionTimeout(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');\n\n        // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n\n    return null;\n  };\n}\n\nvar timeoutsShape = exports.timeoutsShape = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({\n  enter: _propTypes2.default.number,\n  exit: _propTypes2.default.number\n}).isRequired]);\n\nvar classNamesShape = exports.classNamesShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  exit: _propTypes2.default.string,\n  active: _propTypes2.default.string\n}), _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  enterActive: _propTypes2.default.string,\n  exit: _propTypes2.default.string,\n  exitActive: _propTypes2.default.string\n})]);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/react-transition-group/utils/PropTypes.js\n// module id = 497\n// module chunks = 4","import React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\n/* you'll need this CSS somewhere\n.fade-enter {\n  opacity: 0;\n  z-index: 1;\n}\n\n.fade-enter.fade-enter-active {\n  opacity: 1;\n  transition: opacity 250ms ease-in;\n}\n*/\n\nconst AnimationExample = () => (\n  <Router>\n    <Route\n      render={({ location }) => (\n        <div style={styles.fill}>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Redirect to=\"/hsl/10/90/50\" />}\n          />\n\n          <ul style={styles.nav}>\n            <NavLink to=\"/hsl/10/90/50\">Red</NavLink>\n            <NavLink to=\"/hsl/120/100/40\">Green</NavLink>\n            <NavLink to=\"/rgb/33/150/243\">Blue</NavLink>\n            <NavLink to=\"/rgb/240/98/146\">Pink</NavLink>\n          </ul>\n\n          <div style={styles.content}>\n            <TransitionGroup>\n              {/* no different than other usage of\n                CSSTransition, just make sure to pass\n                `location` to `Switch` so it can match\n                the old location as it animates out\n            */}\n              <CSSTransition key={location.key} classNames=\"fade\" timeout={300}>\n                <Switch location={location}>\n                  <Route exact path=\"/hsl/:h/:s/:l\" component={HSL} />\n                  <Route exact path=\"/rgb/:r/:g/:b\" component={RGB} />\n                  {/* Without this `Route`, we would get errors during\n                    the initial transition from `/` to `/hsl/10/90/50`\n                */}\n                  <Route render={() => <div>Not Found</div>} />\n                </Switch>\n              </CSSTransition>\n            </TransitionGroup>\n          </div>\n        </div>\n      )}\n    />\n  </Router>\n);\n\nconst NavLink = props => (\n  <li style={styles.navItem}>\n    <Link {...props} style={{ color: \"inherit\" }} />\n  </li>\n);\n\nconst HSL = ({ match: { params } }) => (\n  <div\n    style={{\n      ...styles.fill,\n      ...styles.hsl,\n      background: `hsl(${params.h}, ${params.s}%, ${params.l}%)`\n    }}\n  >\n    hsl({params.h}, {params.s}%, {params.l}%)\n  </div>\n);\n\nconst RGB = ({ match: { params } }) => (\n  <div\n    style={{\n      ...styles.fill,\n      ...styles.rgb,\n      background: `rgb(${params.r}, ${params.g}, ${params.b})`\n    }}\n  >\n    rgb({params.r}, {params.g}, {params.b})\n  </div>\n);\n\nconst styles = {};\n\nstyles.fill = {\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\n\nstyles.content = {\n  ...styles.fill,\n  top: \"40px\",\n  textAlign: \"center\"\n};\n\nstyles.nav = {\n  padding: 0,\n  margin: 0,\n  position: \"absolute\",\n  top: 0,\n  height: \"40px\",\n  width: \"100%\",\n  display: \"flex\"\n};\n\nstyles.navItem = {\n  textAlign: \"center\",\n  flex: 1,\n  listStyleType: \"none\",\n  padding: \"10px\"\n};\n\nstyles.hsl = {\n  ...styles.fill,\n  color: \"white\",\n  paddingTop: \"20px\",\n  fontSize: \"30px\"\n};\n\nstyles.rgb = {\n  ...styles.fill,\n  color: \"white\",\n  paddingTop: \"20px\",\n  fontSize: \"30px\"\n};\n\nexport default AnimationExample;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/examples/Animation.js?bundle","'use strict';\n\nvar _CSSTransition = require('./CSSTransition');\n\nvar _CSSTransition2 = _interopRequireDefault(_CSSTransition);\n\nvar _TransitionGroup = require('./TransitionGroup');\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nvar _Transition = require('./Transition');\n\nvar _Transition2 = _interopRequireDefault(_Transition);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  Transition: _Transition2.default,\n  TransitionGroup: _TransitionGroup2.default,\n  CSSTransition: _CSSTransition2.default\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/react-transition-group/index.js\n// module id = 554\n// module chunks = 4","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = require('prop-types');\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _addClass = require('dom-helpers/class/addClass');\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = require('dom-helpers/class/removeClass');\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Transition = require('./Transition');\n\nvar _Transition2 = _interopRequireDefault(_Transition);\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar addClass = function addClass(node, classes) {\n  return classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass2.default)(node, c);\n  });\n};\nvar removeClass = function removeClass(node, classes) {\n  return classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass2.default)(node, c);\n  });\n};\n\nvar propTypes = _extends({}, _Transition2.default.propTypes, {\n\n  /**\n   * The animation classNames applied to the component as it enters or exits.\n   * A single name can be provided and it will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`,\n   * `fade-exit`, `fade-exit-active`, `fade-appear`, and `fade-appear-active`.\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   * }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** from the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** from the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n});\n\n/**\n * A `Transition` component using CSS transitions and animations.\n * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` stages of the transition. The first class is applied and then a\n * second \"active\" class in order to activate the css animation.\n *\n * When the `in` prop is toggled to `true` the Component will get\n * the `example-enter` CSS class and the `example-enter-active` CSS class\n * added in the next tick. This is a convention based on the `classNames` prop.\n *\n * ```js\n * import CSSTransition from 'react-transition-group/CSSTransition';\n *\n * const Fade = ({ children, ...props }) => (\n *  <CSSTransition\n *    {...props}\n *    timeout={500}\n *    classNames=\"fade\"\n *  >\n *   {children}\n *  </CSSTransition>\n * );\n *\n * class FadeInAndOut extends React.Component {\n *   constructor(...args) {\n *     super(...args);\n *     this.state= { show: false }\n *\n *     setInterval(() => {\n *       this.setState({ show: !this.state.show })\n *     }, 5000)\n *   }\n *   render() {\n *     return (\n *       <Fade in={this.state.show}>\n *         <div>Hello world</div>\n *       </Fade>\n *     )\n *   }\n * }\n * ```\n *\n * And the coorresponding CSS for the `<Fade>` component:\n *\n * ```css\n * .fade-enter {\n *   opacity: 0.01;\n * }\n *\n * .fade-enter.fade-enter-active {\n *   opacity: 1;\n *   transition: opacity 500ms ease-in;\n * }\n *\n * .fade-exit {\n *   opacity: 1;\n * }\n *\n * .fade-exit.fade-exit-active {\n *   opacity: 0.01;\n *   transition: opacity 300ms ease-in;\n * }\n * ```\n */\n\nvar CSSTransition = function (_React$Component) {\n  _inherits(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransition);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node);\n      }\n    }, _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node);\n      }\n    }, _this.onEntered = function (node, appearing) {\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node);\n      }\n    }, _this.onExit = function (node) {\n      var _this$getClassNames3 = _this.getClassNames('exit'),\n          className = _this$getClassNames3.className;\n\n      _this.removeClasses(node, 'appear');\n      _this.removeClasses(node, 'enter');\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    }, _this.onExiting = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames4.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    }, _this.onExited = function (node) {\n      _this.removeClasses(node, 'exit');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    }, _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n\n\n      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;\n\n      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';\n\n      return { className: className, activeClassName: activeClassName };\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  CSSTransition.prototype.removeClasses = function removeClasses(node, type) {\n    var _getClassNames = this.getClassNames(type),\n        className = _getClassNames.className,\n        activeClassName = _getClassNames.activeClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n  };\n\n  CSSTransition.prototype.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    /* eslint-disable no-unused-expressions */\n    node.scrollTop;\n    /* eslint-enable no-unused-expressions */\n    addClass(node, className);\n  };\n\n  CSSTransition.prototype.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n\n    return _react2.default.createElement(_Transition2.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react2.default.Component);\n\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\n\nexports.default = CSSTransition;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/react-transition-group/CSSTransition.js\n// module id = 555\n// module chunks = 4","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\nvar _hasClass = require('./hasClass');\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/dom-helpers/class/addClass.js\n// module id = 556\n// module chunks = 4","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/dom-helpers/class/hasClass.js\n// module id = 557\n// module chunks = 4","'use strict';\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/dom-helpers/class/removeClass.js\n// module id = 558\n// module chunks = 4","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ChildMapping = require('./utils/ChildMapping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar propTypes = {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   */\n  component: _propTypes2.default.any,\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * A convenience prop that enables or disabled appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: _propTypes2.default.bool,\n  /**\n   * A convenience prop that enables or disabled enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: _propTypes2.default.bool,\n  /**\n    * A convenience prop that enables or disabled exit animations\n    * for all children. Note that specifying this will override any defaults set\n    * on individual children Transitions.\n    */\n  exit: _propTypes2.default.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: _propTypes2.default.func\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n\n/**\n * The `<TransitionGroup>` component manages a set of `<Transition>` components\n * in a list. Like with the `<Transition>` component, `<TransitionGroup>`, is a\n * state machine for managing the mounting and unmounting of components over\n * time.\n *\n * Consider the example below using the `Fade` CSS transition from before.\n * As items are removed or added to the TodoList the `in` prop is toggled\n * automatically by the `<TransitionGroup>`. You can use _any_ `<Transition>`\n * component in a `<TransitionGroup>`, not just css.\n *\n * ```jsx\n * import TransitionGroup from 'react-transition-group/TransitionGroup';\n *\n * class TodoList extends React.Component {\n *   constructor(props) {\n *     super(props)\n *     this.state = {items: ['hello', 'world', 'click', 'me']}\n *   }\n *   handleAdd() {\n *     const newItems = this.state.items.concat([\n *       prompt('Enter some text')\n *     ]);\n *     this.setState({ items: newItems });\n *   }\n *   handleRemove(i) {\n *     let newItems = this.state.items.slice();\n *     newItems.splice(i, 1);\n *     this.setState({items: newItems});\n *   }\n *   render() {\n *     return (\n *       <div>\n *         <button onClick={() => this.handleAdd()}>Add Item</button>\n *         <TransitionGroup>\n *           {this.state.items.map((item, i) => (\n *             <FadeTransition key={item}>\n *               <div>\n *                 {item}{' '}\n *                 <button onClick={() => this.handleRemove(i)}>\n *                   remove\n *                 </button>\n *               </div>\n *             </FadeTransition>\n *           ))}\n *         </TransitionGroup>\n *       </div>\n *     );\n *   }\n * }\n * ```\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual `<Transition>`\n * components. This means you can mix and match animations across different\n * list items.\n */\n\nvar TransitionGroup = function (_React$Component) {\n  _inherits(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    _classCallCheck(this, TransitionGroup);\n\n    // Initial children should all be entering, dependent on appear\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.handleExited = function (key, node, originalHandler) {\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (key in currentChildMapping) return;\n\n      if (originalHandler) originalHandler(node);\n\n      _this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[key];\n        return { children: children };\n      });\n    };\n\n    _this.state = {\n      children: (0, _ChildMapping.getChildMapping)(props.children, function (child) {\n        var onExited = function onExited(node) {\n          _this.handleExited(child.key, node, child.props.onExited);\n        };\n\n        return (0, _react.cloneElement)(child, {\n          onExited: onExited,\n          in: true,\n          appear: _this.getProp(child, 'appear'),\n          enter: _this.getProp(child, 'enter'),\n          exit: _this.getProp(child, 'exit')\n        });\n      })\n    };\n    return _this;\n  }\n\n  TransitionGroup.prototype.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: { isMounting: !this.appeared }\n    };\n  };\n  // use child config unless explictly set by the Group\n\n\n  TransitionGroup.prototype.getProp = function getProp(child, prop) {\n    var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.props;\n\n    return props[prop] != null ? props[prop] : child.props[prop];\n  };\n\n  TransitionGroup.prototype.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    var prevChildMapping = this.state.children;\n    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);\n\n    var children = (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping);\n\n    Object.keys(children).forEach(function (key) {\n      var child = children[key];\n\n      if (!(0, _react.isValidElement)(child)) return;\n\n      var onExited = function onExited(node) {\n        _this2.handleExited(child.key, node, child.props.onExited);\n      };\n\n      var hasPrev = key in prevChildMapping;\n      var hasNext = key in nextChildMapping;\n\n      var prevChild = prevChildMapping[key];\n      var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in;\n\n      // item is new (entering)\n      if (hasNext && (!hasPrev || isLeaving)) {\n        // console.log('entering', key)\n        children[key] = (0, _react.cloneElement)(child, {\n          onExited: onExited,\n          in: true,\n          exit: _this2.getProp(child, 'exit', nextProps),\n          enter: _this2.getProp(child, 'enter', nextProps)\n        });\n      }\n      // item is old (exiting)\n      else if (!hasNext && hasPrev && !isLeaving) {\n          // console.log('leaving', key)\n          children[key] = (0, _react.cloneElement)(child, { in: false });\n        }\n        // item hasn't changed transition states\n        // copy over the last transition props;\n        else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {\n            // console.log('unchanged', key)\n            children[key] = (0, _react.cloneElement)(child, {\n              onExited: onExited,\n              in: prevChild.props.in,\n              exit: _this2.getProp(child, 'exit', nextProps),\n              enter: _this2.getProp(child, 'enter', nextProps)\n            });\n          }\n    });\n\n    this.setState({ children: children });\n  };\n\n  TransitionGroup.prototype.render = function render() {\n    var _props = this.props,\n        Component = _props.component,\n        childFactory = _props.childFactory,\n        props = _objectWithoutProperties(_props, ['component', 'childFactory']);\n\n    var children = this.state.children;\n\n\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    return _react2.default.createElement(\n      Component,\n      props,\n      values(children).map(childFactory)\n    );\n  };\n\n  return TransitionGroup;\n}(_react2.default.Component);\n\nTransitionGroup.childContextTypes = {\n  transitionGroup: _propTypes2.default.object.isRequired\n};\n\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTransitionGroup.defaultProps = defaultProps;\n\nexports.default = TransitionGroup;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/react-transition-group/TransitionGroup.js\n// module id = 559\n// module chunks = 4","'use strict';\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\n\nvar _react = require('react');\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) _react.Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  }\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  var nextKeysPending = Object.create(null);\n\n  var pendingKeys = [];\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i = void 0;\n  var childMapping = {};\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey);\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/react-transition-group/utils/ChildMapping.js\n// module id = 560\n// module chunks = 4"],"sourceRoot":""}